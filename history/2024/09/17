[{"short_id":"phtqhy","short_id_url":"https://lobste.rs/s/phtqhy","created_at":"2024-09-17T04:10:23.000-05:00","title":"Towards Modified Condition/Decision Coverage of Rust","url":"https://arxiv.org/abs/2409.08708","score":7,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/phtqhy/towards_modified_condition_decision","submitter_user":"skade","user_is_author":true,"tags":["rust","testing"]},{"short_id":"jupy5r","short_id_url":"https://lobste.rs/s/jupy5r","created_at":"2024-09-16T10:57:13.000-05:00","title":"Oracle, it’s time to free JavaScript","url":"https://javascript.tm/","score":45,"flags":0,"comment_count":18,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jupy5r/oracle_it_s_time_free_javascript","submitter_user":"jeremiahlee","user_is_author":false,"tags":["javascript"]},{"short_id":"olevrg","short_id_url":"https://lobste.rs/s/olevrg","created_at":"2024-09-15T20:27:30.000-05:00","title":"18 Months with a Framework 13","url":"https://www.projectgus.com/2024/09/18-months-with-framework-laptop/","score":94,"flags":0,"comment_count":33,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/olevrg/18_months_with_framework_13","submitter_user":"projectgus","user_is_author":true,"tags":["hardware"]},{"short_id":"fna7uv","short_id_url":"https://lobste.rs/s/fna7uv","created_at":"2024-09-16T11:49:47.000-05:00","title":"The terminal for Kubernetes","url":"https://github.com/grampelberg/kty","score":19,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fna7uv/terminal_for_kubernetes","submitter_user":"grampelberg","user_is_author":true,"tags":["devops","distributed","rust"]},{"short_id":"j0hure","short_id_url":"https://lobste.rs/s/j0hure","created_at":"2024-09-17T03:07:38.000-05:00","title":"Master hexagonal architecture in Rust","url":"https://www.howtocodeit.com/articles/master-hexagonal-architecture-rust","score":5,"flags":1,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j0hure/master_hexagonal_architecture_rust","submitter_user":"dsp","user_is_author":false,"tags":["rust"]},{"short_id":"70ipvr","short_id_url":"https://lobste.rs/s/70ipvr","created_at":"2024-09-16T20:47:35.000-05:00","title":"Blog: Clapping music for two flip-disc displays","url":"https://hannahilea.com/blog/clapping-music-for-flip-disc-displays/","score":15,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/70ipvr/blog_clapping_music_for_two_flip_disc","submitter_user":"shapr","user_is_author":false,"tags":["hardware"]},{"short_id":"ueu2lj","short_id_url":"https://lobste.rs/s/ueu2lj","created_at":"2024-09-17T05:55:28.000-05:00","title":"Update on Native Matrix interoperability with WhatsApp","url":"https://matrix.org/blog/2024/09/whatsapp-dma/","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ueu2lj/update_on_native_matrix","submitter_user":"gwil","user_is_author":false,"tags":["law","privacy"]},{"short_id":"qqr0v1","short_id_url":"https://lobste.rs/s/qqr0v1","created_at":"2024-09-16T19:14:04.000-05:00","title":"FreeBSD 13.4-RELEASE Announcement","url":"https://www.freebsd.org/releases/13.4R/announce/","score":12,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qqr0v1/freebsd_13_4_release_announcement","submitter_user":"lattera","user_is_author":false,"tags":["freebsd","release"]},{"short_id":"tnhgze","short_id_url":"https://lobste.rs/s/tnhgze","created_at":"2024-09-17T06:55:13.000-05:00","title":"Blindsided by Rust's Subtyping and Variance","url":"https://nullderef.com/blog/rust-variance/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tnhgze/blindsided_by_rust_s_subtyping_variance","submitter_user":"dureuill","user_is_author":false,"tags":["rust"]},{"short_id":"xwm0c3","short_id_url":"https://lobste.rs/s/xwm0c3","created_at":"2024-09-16T20:01:46.000-05:00","title":"Building a system like Realtalk","url":"https://mewo2.com/2024/09/16/","score":9,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xwm0c3/building_system_like_realtalk","submitter_user":"calvin","user_is_author":false,"tags":["programming"]},{"short_id":"j73ada","short_id_url":"https://lobste.rs/s/j73ada","created_at":"2024-09-16T13:27:58.000-05:00","title":"Nix Steering Committee Election 2024","url":"https://discourse.nixos.org/t/nix-steering-committee-election-2024/52232","score":6,"flags":24,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j73ada/nix_steering_committee_election_2024","submitter_user":"infinisil","user_is_author":true,"tags":["nix"]},{"short_id":"uait3m","short_id_url":"https://lobste.rs/s/uait3m","created_at":"2024-09-16T08:25:51.000-05:00","title":"Let’s build and optimize a Rust extension for Python","url":"https://pythonspeed.com/articles/intro-rust-python-extensions/","score":21,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uait3m/let_s_build_optimize_rust_extension_for","submitter_user":"itamarst","user_is_author":true,"tags":["performance","python","rust"]},{"short_id":"sp6you","short_id_url":"https://lobste.rs/s/sp6you","created_at":"2024-09-15T23:34:36.000-05:00","title":"The HTTP QUERY Method","url":"https://www.ietf.org/archive/id/draft-ietf-httpbis-safe-method-w-body-05.html","score":60,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/sp6you/http_query_method","submitter_user":"jparise","user_is_author":false,"tags":["api","web"]},{"short_id":"qxv9a1","short_id_url":"https://lobste.rs/s/qxv9a1","created_at":"2024-09-16T03:31:21.000-05:00","title":"A Spreadsheet and a Debugger walk into a Shell","url":"https://arcan-fe.com/2024/09/16/a-spreadsheet-and-a-debugger-walks-into-a-shell/","score":18,"flags":0,"comment_count":6,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qxv9a1/spreadsheet_debugger_walk_into_shell","submitter_user":"crazyloglad","user_is_author":true,"tags":["debugging","osdev"]},{"short_id":"albrk0","short_id_url":"https://lobste.rs/s/albrk0","created_at":"2024-09-15T23:53:10.000-05:00","title":"Creating your own federated microblog","url":"https://fedify.dev/tutorial/microblog","score":19,"flags":0,"comment_count":16,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/albrk0/creating_your_own_federated_microblog","submitter_user":"hongminhee","user_is_author":true,"tags":["distributed","web"]},{"short_id":"txrmqm","short_id_url":"https://lobste.rs/s/txrmqm","created_at":"2024-09-16T13:12:58.000-05:00","title":"NixOS server up in minutes","url":"https://gvolpe.com/blog/nixos-server/","score":15,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/txrmqm/nixos_server_up_minutes","submitter_user":"jkarni","user_is_author":false,"tags":["devops","nix"]},{"short_id":"rwxomx","short_id_url":"https://lobste.rs/s/rwxomx","created_at":"2024-09-16T04:58:01.000-05:00","title":"What are you doing this week?","url":"","score":13,"flags":0,"comment_count":39,"description":"\u003cp\u003eWhat are you doing this week? Feel free to share!\u003c/p\u003e\n\u003cp\u003eKeep in mind it’s OK to do nothing at all, too.\u003c/p\u003e\n","description_plain":"What are you doing this week? Feel free to share!\r\n\r\nKeep in mind it’s OK to do nothing at all, too.","comments_url":"https://lobste.rs/s/rwxomx/what_are_you_doing_this_week","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"]},{"short_id":"mwazky","short_id_url":"https://lobste.rs/s/mwazky","created_at":"2024-09-16T13:15:44.000-05:00","title":"Interning in Go","url":"https://medium.com/google-cloud/interning-in-go-4319ea635002","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mwazky/interning_go","submitter_user":"carlana","user_is_author":false,"tags":["go"]},{"short_id":"bbzp08","short_id_url":"https://lobste.rs/s/bbzp08","created_at":"2024-09-16T03:24:07.000-05:00","title":"Constraints and guarantees","url":"https://jfmengels.net/constraints-and-guarantees/","score":9,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bbzp08/constraints_guarantees","submitter_user":"jfmengels","user_is_author":true,"tags":["programming"]},{"short_id":"lkiswl","short_id_url":"https://lobste.rs/s/lkiswl","created_at":"2024-09-16T05:48:11.000-05:00","title":"Cellguard: Analyze and observe cellular networks to detect surveillance","url":"https://cellguard.seemoo.de/","score":13,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lkiswl/cellguard_analyze_observe_cellular","submitter_user":"freddyb","user_is_author":false,"tags":["mobile","security"]},{"short_id":"majyey","short_id_url":"https://lobste.rs/s/majyey","created_at":"2024-09-15T17:48:03.000-05:00","title":"Something went wrong","url":"https://molily.de/something-went-wrong/","score":31,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/majyey/something_went_wrong","submitter_user":"wezm","user_is_author":false,"tags":["javascript"]},{"short_id":"wfgevl","short_id_url":"https://lobste.rs/s/wfgevl","created_at":"2024-09-15T12:18:38.000-05:00","title":"MiniLang: A type-safe C successor","url":"https://github.com/NICUP14/MiniLang","score":25,"flags":2,"comment_count":33,"description":"\u003cstrong\u003eMiniLang\u003c/strong\u003e\n\u003cp\u003eA type-safe C successor that compiles to various platforms.\u003c/p\u003e\n\u003cstrong\u003eQuickStart\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NICUP14/MiniLang/blob/main/QUICKSTART.md\" rel=\"ugc\"\u003eLanguage Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NICUP14/MiniLang/blob/main/STDLIB.md\" rel=\"ugc\"\u003eStandard Library Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/NICUP14/MiniLang/blob/main/docs/stdlib/examples.md\" rel=\"ugc\"\u003eStandard Library Usage Examples\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cstrong\u003eDesign choices\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eModern\u003c/li\u003e\n\u003cli\u003eCompiled\u003c/li\u003e\n\u003cli\u003eProcedural\u003c/li\u003e\n\u003cli\u003eStrongly typed\u003c/li\u003e\n\u003cli\u003eType and memory safe\u003c/li\u003e\n\u003cli\u003eClosely match C features\u003c/li\u003e\n\u003cli\u003eBidirectionally compatible with C\u003c/li\u003e\n\u003cli\u003eML must be easy to learn and use\u003c/li\u003e\n\u003cli\u003eML abstractions introduce zero-overhead compared to C\u003c/li\u003e\n\u003c/ul\u003e\n\u003cstrong\u003eMotivation\u003c/strong\u003e\n\u003cp\u003eThe language is designed to closely match c features along with some zero-overhead quality of life improvements that you would find in a modern language, while maintaining the ease of learning the language (in about 10 minutes or less via QUICKSTART). Moreover, the type system is stricter than c, which prevents common bugs (flaws) of the c language. Memory safety is also a primary concern. As for c compatibility, the language is bidirectionally compatible with c (c can be used in ML, ML can be used in c).\u003c/p\u003e\n\u003cstrong\u003eGoodies\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eRAII\u003c/li\u003e\n\u003cli\u003eBuiltins\u003c/li\u003e\n\u003cli\u003eBooleans\u003c/li\u003e\n\u003cli\u003eReferences\u003c/li\u003e\n\u003cli\u003eFixed-length integers\u003c/li\u003e\n\u003cli\u003eFixed-length pointers\u003c/li\u003e\n\u003cli\u003eType inference\u003c/li\u003e\n\u003cli\u003eHeredocs\u003c/li\u003e\n\u003cli\u003eAliases\u003c/li\u003e\n\u003cli\u003eDefers\u003c/li\u003e\n\u003cli\u003eImports\u003c/li\u003e\n\u003cli\u003eNamespaces\u003c/li\u003e\n\u003cli\u003eHygienic macros\u003c/li\u003e\n\u003cli\u003eFor-each loops\u003c/li\u003e\n\u003cli\u003eGeneric functions\u003c/li\u003e\n\u003cli\u003eFunction overloading\u003c/li\u003e\n\u003cli\u003eFunction signatures\u003c/li\u003e\n\u003cli\u003eUniform function call syntax (UFCS)\u003c/li\u003e\n\u003cli\u003eMulti-line statements\u003c/li\u003e\n\u003c/ul\u003e\n\u003cstrong\u003eHello Word Sample\u003c/strong\u003e\n\u003cpre\u003e\u003ccode\u003eimport stdlib.io.print\n\nfun main: int32\n    print \"Hello World!\"\n    ret 0\nend\n\u003c/code\u003e\u003c/pre\u003e\n\u003cstrong\u003eString-UFCS Sample\u003c/strong\u003e\n\u003cpre\u003e\u003ccode\u003eimport stdlib.io.print\nimport stdlib.string\n\nfun main: int32\n    # Is equivalent to:\n    # print(concat(str(\"Hello \"), str(\"World!\")))\n    (str(\"Hello \").\n        concat(str(\"World!\")).\n        print)\nend\n\u003c/code\u003e\u003c/pre\u003e\n","description_plain":"# MiniLang\r\n\r\nA type-safe C successor that compiles to various platforms.\r\n\r\n## QuickStart\r\n\r\n* [Language Documentation](https://github.com/NICUP14/MiniLang/blob/main/QUICKSTART.md)\r\n* [Standard Library Documentation](https://github.com/NICUP14/MiniLang/blob/main/STDLIB.md)\r\n* [Standard Library Usage Examples](https://github.com/NICUP14/MiniLang/blob/main/docs/stdlib/examples.md)\r\n\r\n## Design choices\r\n\r\n* Modern\r\n* Compiled\r\n* Procedural\r\n* Strongly typed\r\n* Type and memory safe\r\n* Closely match C features\r\n* Bidirectionally compatible with C\r\n* ML must be easy to learn and use\r\n* ML abstractions introduce zero-overhead compared to C\r\n\r\n## Motivation\r\n\r\nThe language is designed to closely match c features along with some zero-overhead quality of life improvements that you would find in a modern language, while maintaining the ease of learning the language (in about 10 minutes or less via QUICKSTART). Moreover, the type system is stricter than c, which prevents common bugs (flaws) of the c language. Memory safety is also a primary concern. As for c compatibility, the language is bidirectionally compatible with c (c can be used in ML, ML can be used in c).\r\n\r\n## Goodies\r\n\r\n* RAII\r\n* Builtins\r\n* Booleans\r\n* References\r\n* Fixed-length integers\r\n* Fixed-length pointers\r\n* Type inference\r\n* Heredocs\r\n* Aliases\r\n* Defers\r\n* Imports\r\n* Namespaces\r\n* Hygienic macros\r\n* For-each loops\r\n* Generic functions\r\n* Function overloading\r\n* Function signatures\r\n* Uniform function call syntax (UFCS)\r\n* Multi-line statements\r\n\r\n## Hello Word Sample\r\n\r\n```\r\nimport stdlib.io.print\r\n\r\nfun main: int32\r\n    print \"Hello World!\"\r\n    ret 0\r\nend\r\n```\r\n\r\n## String-UFCS Sample\r\n\r\n```\r\nimport stdlib.io.print\r\nimport stdlib.string\r\n\r\nfun main: int32\r\n    # Is equivalent to:\r\n    # print(concat(str(\"Hello \"), str(\"World!\")))\r\n    (str(\"Hello \").\r\n        concat(str(\"World!\")).\r\n        print)\r\nend\r\n```","comments_url":"https://lobste.rs/s/wfgevl/minilang_type_safe_c_successor","submitter_user":"NICUP14","user_is_author":true,"tags":["compilers","compsci","plt","python"]},{"short_id":"qeijkv","short_id_url":"https://lobste.rs/s/qeijkv","created_at":"2024-09-16T18:01:02.000-05:00","title":"Tiny process execution for humans — a better child_process","url":"https://github.com/sindresorhus/nano-spawn","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qeijkv/tiny_process_execution_for_humans_better","submitter_user":"ehmicky","user_is_author":true,"tags":["javascript","nodejs","unix"]},{"short_id":"mun2dn","short_id_url":"https://lobste.rs/s/mun2dn","created_at":"2024-09-16T16:21:01.000-05:00","title":"Drive-by Active Storage advice","url":"https://justin.searls.co/posts/drive-by-active-storage-advice/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mun2dn/drive_by_active_storage_advice","submitter_user":"MatheusRich","user_is_author":false,"tags":["ruby"]},{"short_id":"ajnwu4","short_id_url":"https://lobste.rs/s/ajnwu4","created_at":"2024-09-15T15:50:02.000-05:00","title":"Fixing an Elgato HD60 S HDMI capture device with the help of Ghidra","url":"https://www.downtowndougbrown.com/2024/09/fixing-an-elgato-hd60-s-hdmi-capture-device-with-the-help-of-ghidra/","score":44,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ajnwu4/fixing_elgato_hd60_s_hdmi_capture_device","submitter_user":"calvin","user_is_author":false,"tags":["hardware","reversing"]}]