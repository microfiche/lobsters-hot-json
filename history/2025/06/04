[{"short_id":"joubld","created_at":"2025-06-03T15:33:36.000-05:00","title":"jujutsu on tangled","url":"https://blog.tangled.sh/stacking","score":66,"flags":0,"comment_count":26,"description":"","description_plain":"","submitter_user":"op","user_is_author":true,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/joubld","comments_url":"https://lobste.rs/s/joubld/jujutsu_on_tangled"},{"short_id":"uwp2hd","created_at":"2025-06-04T03:38:32.000-05:00","title":"What's your go-to message queue in 2025?","url":"","score":16,"flags":0,"comment_count":10,"description":"\u003cpre\u003e\u003ccode\u003eThe space is confusing to say the least.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMessage queues are usually a core part of any distributed architecture, and the options are endless:\nKafka, RabbitMQ, Redis {Pub-Sub, Streams}, Cloud Providers {AWS SQS, Kinesis; Google Pub/Sub; Azure Event Hubs, Service Bus}, Pulsar, ZeroMQ… and then there’s the “just use Postgres” camp for simpler use cases.\u003c/p\u003e\n\u003cp\u003eI’m trying to make sense of the tradeoffs between:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003easync fire-and-forget pub/sub vs. sync RPC-like point to point communication\u003c/li\u003e\n\u003cli\u003esimple FIFO vs. priority queues\u003c/li\u003e\n\u003cli\u003eintelligent brokers (e.g. RabbitMQ, NATS with filters) vs. minimalistic brokers (e.g. Kafka’s client-driven model)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThere’s also a fair amount of ideology/emotional attachment - some folks root for underdogs written in their favorite programming language, others reflexively dismiss anything that’s not “enterprise-grade”. And of course, vendors are always in the mix trying to steer the conversation toward their own solution through marketing (with good success).\u003c/p\u003e\n\u003cp\u003eIf you’ve built a production system in the last few years:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eWhat queue did you choose?\u003c/li\u003e\n\u003cli\u003eWhat didn’t work out?\u003c/li\u003e\n\u003cli\u003eWhere did you regret adding complexity?\u003c/li\u003e\n\u003cli\u003eAnd if you stuck with a DB-based queue — to what point did it scale?\u003c/li\u003e\n\u003cli\u003eHow much did the available fully-hosted SaaS offerings play into that role? (I understand many orgs just default opt into that)\u003c/li\u003e\n\u003cli\u003eWas latency an important consideration? How many of your use cases can live with 1-2s p99 latency? (as the Kafka space is currently moving to support, at the tradeoff of lower costs and simplicity)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI’d love to hear war stories, regrets, and opinions.\u003c/p\u003e\n","description_plain":"\tThe space is confusing to say the least.\r\nMessage queues are usually a core part of any distributed architecture, and the options are endless:\r\nKafka, RabbitMQ, Redis {Pub-Sub, Streams}, Cloud Providers {AWS SQS, Kinesis; Google Pub/Sub; Azure Event Hubs, Service Bus}, Pulsar, ZeroMQ... and then there's the “just use Postgres” camp for simpler use cases.\r\n\r\nI’m trying to make sense of the tradeoffs between:\r\n- async fire-and-forget pub/sub vs. sync RPC-like point to point communication\r\n- simple FIFO vs. priority queues\r\n- intelligent brokers (e.g. RabbitMQ, NATS with filters) vs. minimalistic brokers (e.g. Kafka’s client-driven model)\r\n\r\nThere's also a fair amount of ideology/emotional attachment - some folks root for underdogs written in their favorite programming language, others reflexively dismiss anything that's not \"enterprise-grade\". And of course, vendors are always in the mix trying to steer the conversation toward their own solution through marketing (with good success).\r\n\r\nIf you’ve built a production system in the last few years:\r\n\r\n1. What queue did you choose?\r\n2. What didn't work out?\r\n3. Where did you regret adding complexity?\r\n4. And if you stuck with a DB-based queue — to what point did it scale?\r\n5. How much did the available fully-hosted SaaS offerings play into that role? (I understand many orgs just default opt into that)\r\n6. Was latency an important consideration? How many of your use cases can live with 1-2s p99 latency? (as the Kafka space is currently moving to support, at the tradeoff of lower costs and simplicity)\r\n\r\nI’d love to hear war stories, regrets, and opinions.","submitter_user":"topicpartition","user_is_author":true,"tags":["distributed","programming","scaling"],"short_id_url":"https://lobste.rs/s/uwp2hd","comments_url":"https://lobste.rs/s/uwp2hd/what_s_your_go_message_queue_2025"},{"short_id":"xyhnvt","created_at":"2025-06-03T11:45:21.000-05:00","title":"[ On | No ] syntactic support for error handling","url":"https://go.dev/blog/error-syntax","score":86,"flags":0,"comment_count":44,"description":"","description_plain":"","submitter_user":"cgrinds","user_is_author":false,"tags":["go"],"short_id_url":"https://lobste.rs/s/xyhnvt","comments_url":"https://lobste.rs/s/xyhnvt/on_no_syntactic_support_for_error"},{"short_id":"n2lvmy","created_at":"2025-06-04T04:11:04.000-05:00","title":"AI Changes Everything","url":"https://lucumr.pocoo.org/2025/6/4/changes/","score":10,"flags":5,"comment_count":18,"description":"","description_plain":"","submitter_user":"op","user_is_author":false,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/n2lvmy","comments_url":"https://lobste.rs/s/n2lvmy/ai_changes_everything"},{"short_id":"ph75m1","created_at":"2025-06-04T00:04:36.000-05:00","title":"Physicality: the new age of UI","url":"https://www.lux.camera/physicality-the-new-age-of-ui/","score":18,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"lyall","user_is_author":false,"tags":["design","ios","mac"],"short_id_url":"https://lobste.rs/s/ph75m1","comments_url":"https://lobste.rs/s/ph75m1/physicality_new_age_ui"},{"short_id":"vymkqm","created_at":"2025-06-03T11:39:47.000-05:00","title":"Don't McBlock me","url":"https://www.schneems.com/2025/06/03/dont-mcblock-me/","score":47,"flags":1,"comment_count":22,"description":"","description_plain":"","submitter_user":"MatheusRich","user_is_author":false,"tags":["practices"],"short_id_url":"https://lobste.rs/s/vymkqm","comments_url":"https://lobste.rs/s/vymkqm/don_t_mcblock_me"},{"short_id":"l8y8gg","created_at":"2025-06-03T11:05:50.000-05:00","title":"Where did \u003crandom\u003e go wrong?","url":"https://codingnest.com/files/What%20Went%20Wrong%20With%20_random__.pdf","score":38,"flags":0,"comment_count":11,"description":"","description_plain":"","submitter_user":"fanf","user_is_author":false,"tags":["c++","pdf","slides"],"short_id_url":"https://lobste.rs/s/l8y8gg","comments_url":"https://lobste.rs/s/l8y8gg/where_did_random_go_wrong"},{"short_id":"j9yk3n","created_at":"2025-06-03T19:51:43.000-05:00","title":"DiffX - Next-Generation Extensible Diff Format","url":"https://diffx.org/","score":18,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"JordiGH","user_is_author":false,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/j9yk3n","comments_url":"https://lobste.rs/s/j9yk3n/diffx_next_generation_extensible_diff"},{"short_id":"pn7sq3","created_at":"2025-06-03T10:17:30.000-05:00","title":"Interfacing MCP with Combinatorial, Convex, and SMT Solvers","url":"https://www.stephendiehl.com/posts/smt_and_mcp_solvers/","score":26,"flags":0,"comment_count":6,"description":"","description_plain":"","submitter_user":"sdiehl","user_is_author":true,"tags":["python","vibecoding"],"short_id_url":"https://lobste.rs/s/pn7sq3","comments_url":"https://lobste.rs/s/pn7sq3/interfacing_mcp_with_combinatorial"},{"short_id":"lxebr5","created_at":"2025-06-03T18:02:31.000-05:00","title":"Mapping latitude and longitude to country, state, or city","url":"https://austinhenley.com/blog/coord2state.html","score":10,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"azhenley","user_is_author":true,"tags":["programming"],"short_id_url":"https://lobste.rs/s/lxebr5","comments_url":"https://lobste.rs/s/lxebr5/mapping_latitude_longitude_country"},{"short_id":"fgt681","created_at":"2025-06-03T08:41:56.000-05:00","title":"Vibe coding case study: ScubaDuck","url":"https://blog.ezyang.com/2025/06/vibe-coding-case-study-scubaduck/","score":20,"flags":0,"comment_count":10,"description":"","description_plain":"","submitter_user":"ezyang","user_is_author":true,"tags":["vibecoding"],"short_id_url":"https://lobste.rs/s/fgt681","comments_url":"https://lobste.rs/s/fgt681/vibe_coding_case_study_scubaduck"},{"short_id":"mokfrm","created_at":"2025-06-04T06:31:38.000-05:00","title":"Experimenting with no-build Web Applications","url":"https://andregarzia.com/2025/06/experimenting-with-no-build-web-applications.html","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"SoapDog","user_is_author":true,"tags":["javascript","web"],"short_id_url":"https://lobste.rs/s/mokfrm","comments_url":"https://lobste.rs/s/mokfrm/experimenting_with_no_build_web"},{"short_id":"ocu642","created_at":"2025-06-03T18:15:06.000-05:00","title":"How Compiler Explorer Works in 2025","url":"https://xania.org/202506/how-compiler-explorer-works","score":16,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"craigstuntz","user_is_author":false,"tags":["c","compilers","scaling","web"],"short_id_url":"https://lobste.rs/s/ocu642","comments_url":"https://lobste.rs/s/ocu642/how_compiler_explorer_works_2025"},{"short_id":"qsksxp","created_at":"2025-06-03T14:04:37.000-05:00","title":"Zero-Cost 'Tagless Final' in Rust with GADT-style Enums","url":"https://www.inferara.com/en/blog/rust-tagless-final-gadt/","score":18,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"ohrv","user_is_author":false,"tags":["plt","rust"],"short_id_url":"https://lobste.rs/s/qsksxp","comments_url":"https://lobste.rs/s/qsksxp/zero_cost_tagless_final_rust_with_gadt"},{"short_id":"lgeepy","created_at":"2025-06-03T10:36:24.000-05:00","title":"What Happens If We Inline Everything?","url":"https://sbaziotis.com/compilers/what-happens-if-we-inline-everything.html","score":25,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"abhi9u","user_is_author":false,"tags":["compilers"],"short_id_url":"https://lobste.rs/s/lgeepy","comments_url":"https://lobste.rs/s/lgeepy/what_happens_if_we_inline_everything"},{"short_id":"bvcjso","created_at":"2025-06-03T14:39:20.000-05:00","title":"Claude Code is My Computer","url":"https://steipete.me/posts/2025/claude-code-is-my-computer","score":10,"flags":8,"comment_count":12,"description":"","description_plain":"","submitter_user":"Helithumper","user_is_author":false,"tags":["practices","vibecoding"],"short_id_url":"https://lobste.rs/s/bvcjso","comments_url":"https://lobste.rs/s/bvcjso/claude_code_is_my_computer"},{"short_id":"uqds7a","created_at":"2025-06-04T06:27:06.000-05:00","title":"Distance-Based ISA for Efficient Register Management","url":"https://www.sigarch.org/distance-based-isa-for-efficient-register-management/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"abhi9u","user_is_author":false,"tags":["compilers","hardware"],"short_id_url":"https://lobste.rs/s/uqds7a","comments_url":"https://lobste.rs/s/uqds7a/distance_based_isa_for_efficient"},{"short_id":"gjz28s","created_at":"2025-06-03T12:19:07.000-05:00","title":"Building Industrial Strength Software without Unit Tests","url":"https://chrispenner.ca/posts/transcript-tests","score":12,"flags":0,"comment_count":16,"description":"","description_plain":"","submitter_user":"shapr","user_is_author":false,"tags":["testing"],"short_id_url":"https://lobste.rs/s/gjz28s","comments_url":"https://lobste.rs/s/gjz28s/building_industrial_strength_software"},{"short_id":"vjnzzj","created_at":"2025-06-03T18:07:25.000-05:00","title":"Deep learning gets the glory, deep fact checking gets ignored","url":"https://rachel.fast.ai/posts/2025-06-04-enzyme-ml-fails/index.html","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"veqq","user_is_author":false,"tags":["ai"],"short_id_url":"https://lobste.rs/s/vjnzzj","comments_url":"https://lobste.rs/s/vjnzzj/deep_learning_gets_glory_deep_fact"},{"short_id":"02usbk","created_at":"2025-06-02T08:49:20.000-05:00","title":"Gleam v1.11.0 released","url":"https://gleam.run/news/gleam-javascript-gets-30-percent-faster/","score":96,"flags":1,"comment_count":34,"description":"","description_plain":"","submitter_user":"lpil","user_is_author":true,"tags":["gleam","javascript","release"],"short_id_url":"https://lobste.rs/s/02usbk","comments_url":"https://lobste.rs/s/02usbk/gleam_v1_11_0_released"},{"short_id":"tyacrw","created_at":"2025-06-03T18:45:22.000-05:00","title":"Handling bidirectional control flow","url":"https://dl.acm.org/doi/10.1145/3428207","score":7,"flags":0,"comment_count":1,"description":"\u003cp\u003eBidirectional effects can encode a lispish condition system!\u003c/p\u003e\n","description_plain":"Bidirectional effects can encode a lispish condition system!","submitter_user":"veqq","user_is_author":false,"tags":["pdf","plt"],"short_id_url":"https://lobste.rs/s/tyacrw","comments_url":"https://lobste.rs/s/tyacrw/handling_bidirectional_control_flow"},{"short_id":"0wtqlb","created_at":"2025-06-03T07:32:34.000-05:00","title":"Covert Web-to-App Tracking via Localhost on Android","url":"https://localmess.github.io/","score":25,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"freddyb","user_is_author":false,"tags":["privacy","security"],"short_id_url":"https://lobste.rs/s/0wtqlb","comments_url":"https://lobste.rs/s/0wtqlb/covert_web_app_tracking_via_localhost_on"},{"short_id":"i43e6e","created_at":"2025-06-02T14:40:03.000-05:00","title":"Google Logo Ligature Bug","url":"https://www.jefftk.com/p/google-logo-ligature-bug","score":75,"flags":0,"comment_count":19,"description":"","description_plain":"","submitter_user":"op","user_is_author":false,"tags":["security","web"],"short_id_url":"https://lobste.rs/s/i43e6e","comments_url":"https://lobste.rs/s/i43e6e/google_logo_ligature_bug"},{"short_id":"honikk","created_at":"2025-06-04T07:32:32.000-05:00","title":"yet another LLM","url":"https://www.yetanotherllm.com/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"ricardbejarano","user_is_author":true,"tags":["satire"],"short_id_url":"https://lobste.rs/s/honikk","comments_url":"https://lobste.rs/s/honikk/yet_another_llm"},{"short_id":"qtyilg","created_at":"2025-06-02T20:01:36.000-05:00","title":"GenAI is Our Polyester","url":"https://culture.ghost.io/genai-is-our-polyester/","score":40,"flags":1,"comment_count":32,"description":"","description_plain":"","submitter_user":"facundoolano","user_is_author":false,"tags":["art","vibecoding"],"short_id_url":"https://lobste.rs/s/qtyilg","comments_url":"https://lobste.rs/s/qtyilg/genai_is_our_polyester"}]