[{"short_id":"g3qejh","created_at":"2025-10-31T05:14:12.000-05:00","title":"My impressions of the MacBook Pro M4","url":"https://michael.stapelberg.ch/posts/2025-10-31-macbook-pro-m4-impressions/","score":16,"flags":0,"comment_count":8,"description":"","description_plain":"","submitter_user":"stapelberg","user_is_author":true,"tags":["hardware","mac"],"short_id_url":"https://lobste.rs/s/g3qejh","comments_url":"https://lobste.rs/s/g3qejh/my_impressions_macbook_pro_m4"},{"short_id":"xpivuc","created_at":"2025-10-30T16:34:11.000-05:00","title":"GHC now runs in your browser","url":"https://discourse.haskell.org/t/ghc-now-runs-in-your-browser/13169","score":42,"flags":0,"comment_count":11,"description":"","description_plain":"","submitter_user":"puffnfresh","user_is_author":false,"tags":["haskell"],"short_id_url":"https://lobste.rs/s/xpivuc","comments_url":"https://lobste.rs/s/xpivuc/ghc_now_runs_your_browser"},{"short_id":"6c86lq","created_at":"2025-10-31T06:51:00.000-05:00","title":"Perfetto: Swiss Army Knife for Linux Client Tracing","url":"https://lalitm.com/perfetto-swiss-army-knife/","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"lalitm","user_is_author":true,"tags":["linux","performance","visualization"],"short_id_url":"https://lobste.rs/s/6c86lq","comments_url":"https://lobste.rs/s/6c86lq/perfetto_swiss_army_knife_for_linux"},{"short_id":"dnilu3","created_at":"2025-10-30T20:13:33.000-05:00","title":"Roadmap for improving the Swift type checker","url":"https://forums.swift.org/t/roadmap-for-improving-the-type-checker/82952","score":21,"flags":0,"comment_count":11,"description":"","description_plain":"","submitter_user":"asb","user_is_author":false,"tags":["plt","swift"],"short_id_url":"https://lobste.rs/s/dnilu3","comments_url":"https://lobste.rs/s/dnilu3/roadmap_for_improving_swift_type_checker"},{"short_id":"q2fuc0","created_at":"2025-10-30T19:00:40.000-05:00","title":"wastrel, a profligate implementation of webassembly","url":"https://wingolog.org/archives/2025/10/30/wastrel-a-profligate-implementation-of-webassembly","score":32,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"flockofbirbs","user_is_author":false,"tags":["compilers","wasm"],"short_id_url":"https://lobste.rs/s/q2fuc0","comments_url":"https://lobste.rs/s/q2fuc0/wastrel_profligate_implementation"},{"short_id":"vebdjk","created_at":"2025-10-30T14:02:41.000-05:00","title":"Announcing Rust 1.91.0","url":"https://blog.rust-lang.org/2025/10/30/Rust-1.91.0/","score":33,"flags":0,"comment_count":13,"description":"","description_plain":"","submitter_user":"mediremi","user_is_author":false,"tags":["release","rust"],"short_id_url":"https://lobste.rs/s/vebdjk","comments_url":"https://lobste.rs/s/vebdjk/announcing_rust_1_91_0"},{"short_id":"r8jkz9","created_at":"2025-10-30T15:53:53.000-05:00","title":"Fix your FODs","url":"https://garnix.io/blog/fix-your-fods","score":16,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"jkarni","user_is_author":true,"tags":["nix","security"],"short_id_url":"https://lobste.rs/s/r8jkz9","comments_url":"https://lobste.rs/s/r8jkz9/fix_your_fods"},{"short_id":"jb4imt","created_at":"2025-10-31T03:47:48.000-05:00","title":"GHC 9.14.1-rc1 is now available","url":"https://discourse.haskell.org/t/ghc-9-14-1-rc1-is-now-available/13194","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"jkarni","user_is_author":false,"tags":["compilers","haskell","release"],"short_id_url":"https://lobste.rs/s/jb4imt","comments_url":"https://lobste.rs/s/jb4imt/ghc_9_14_1_rc1_is_now_available"},{"short_id":"vd7dgj","created_at":"2025-10-29T10:13:59.000-05:00","title":"Normalize Identifying Corporate Devices in Your Software","url":"https://lgug2z.com/articles/normalize-identifying-corporate-devices-in-your-software/","score":151,"flags":0,"comment_count":52,"description":"","description_plain":"","submitter_user":"jeezy","user_is_author":true,"tags":["law","programming"],"short_id_url":"https://lobste.rs/s/vd7dgj","comments_url":"https://lobste.rs/s/vd7dgj/normalize_identifying_corporate"},{"short_id":"4a1gx2","created_at":"2025-10-30T10:38:29.000-05:00","title":"The Math Mode Problem in Typst","url":"https://laurmaedje.github.io/posts/math-mode-problem/","score":27,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"fanf","user_is_author":false,"tags":["programming"],"short_id_url":"https://lobste.rs/s/4a1gx2","comments_url":"https://lobste.rs/s/4a1gx2/math_mode_problem_typst"},{"short_id":"gbnrii","created_at":"2025-10-30T00:28:26.000-05:00","title":"Crunchyroll is destroying its subtitles for no good reason","url":"https://daiz.moe/crunchyroll-is-destroying-its-subtitles-for-no-good-reason/","score":81,"flags":3,"comment_count":14,"description":"","description_plain":"","submitter_user":"rslabbert","user_is_author":false,"tags":["a11y"],"short_id_url":"https://lobste.rs/s/gbnrii","comments_url":"https://lobste.rs/s/gbnrii/crunchyroll_is_destroying_its_subtitles"},{"short_id":"ufettb","created_at":"2025-10-30T21:06:07.000-05:00","title":"Hacking Indiaâ€™s largest automaker: Tata Motors","url":"https://eaton-works.com/2025/10/28/tata-motors-hack/","score":7,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"mtlynch","user_is_author":false,"tags":["security"],"short_id_url":"https://lobste.rs/s/ufettb","comments_url":"https://lobste.rs/s/ufettb/hacking_india_s_largest_automaker_tata"},{"short_id":"ukvfgs","created_at":"2025-10-30T11:12:06.000-05:00","title":"Language Models are Injective and Hence Invertible","url":"https://arxiv.org/abs/2510.15511","score":19,"flags":0,"comment_count":5,"description":"\u003cp\u003eTransformer components such as non-linear activations and normalization are inherently non-injective, suggesting that different inputs could map to the same output and prevent exact recovery of the input from a model's representations. In this paper, we challenge this view. First, we prove mathematically that transformer language models mapping discrete input sequences to their corresponding sequence of continuous representations are injective and therefore lossless, a property established at initialization and preserved during training. Second, we confirm this result empirically through billions of collision tests on six state-of-the-art language models, and observe no collisions. Third, we operationalize injectivity: we introduce SipIt, the first algorithm that provably and efficiently reconstructs the exact input text from hidden activations, establishing linear-time guarantees and demonstrating exact invertibility in practice. Overall, our work establishes injectivity as a fundamental and exploitable property of language models, with direct implications for transparency, interpretability, and safe deployment.\u003c/p\u003e\n","description_plain":"Transformer components such as non-linear activations and normalization are inherently non-injective, suggesting that different inputs could map to the same output and prevent exact recovery of the input from a model's representations. In this paper, we challenge this view. First, we prove mathematically that transformer language models mapping discrete input sequences to their corresponding sequence of continuous representations are injective and therefore lossless, a property established at initialization and preserved during training. Second, we confirm this result empirically through billions of collision tests on six state-of-the-art language models, and observe no collisions. Third, we operationalize injectivity: we introduce SipIt, the first algorithm that provably and efficiently reconstructs the exact input text from hidden activations, establishing linear-time guarantees and demonstrating exact invertibility in practice. Overall, our work establishes injectivity as a fundamental and exploitable property of language models, with direct implications for transparency, interpretability, and safe deployment.","submitter_user":"Corbin","user_is_author":false,"tags":["ai","math","security"],"short_id_url":"https://lobste.rs/s/ukvfgs","comments_url":"https://lobste.rs/s/ukvfgs/language_models_are_injective_hence"},{"short_id":"o9kqf4","created_at":"2025-10-30T16:42:08.000-05:00","title":"LISP: Notes on its Past and Future (1980)","url":"https://www-formal.stanford.edu/jmc/lisp20th/lisp20th.html","score":10,"flags":0,"comment_count":4,"description":"","description_plain":"","submitter_user":"fanf","user_is_author":false,"tags":["lisp"],"short_id_url":"https://lobste.rs/s/o9kqf4","comments_url":"https://lobste.rs/s/o9kqf4/lisp_notes_on_its_past_future_1980"},{"short_id":"rb81fq","created_at":"2025-10-29T15:06:23.000-05:00","title":"Zig's New Async I/O (Text Version)","url":"https://andrewkelley.me/post/zig-new-async-io-text-version.html","score":94,"flags":1,"comment_count":18,"description":"","description_plain":"","submitter_user":"andrewrk","user_is_author":true,"tags":["zig"],"short_id_url":"https://lobste.rs/s/rb81fq","comments_url":"https://lobste.rs/s/rb81fq/zig_s_new_async_i_o_text_version"},{"short_id":"lr21qf","created_at":"2025-10-31T03:34:37.000-05:00","title":"Challenging the Fastest OSS Workflow Engine","url":"https://obeli.sk/blog/challenging-fastest-workflow-engine/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"tomas","user_is_author":true,"tags":["rust","wasm"],"short_id_url":"https://lobste.rs/s/lr21qf","comments_url":"https://lobste.rs/s/lr21qf/challenging_fastest_oss_workflow_engine"},{"short_id":"kxcfcu","created_at":"2025-10-31T05:34:13.000-05:00","title":"Advanced Documentation Retrieval on FreeBSD","url":"https://adventurist.me/posts/00306","score":2,"flags":0,"comment_count":2,"description":"\u003cp\u003eI thought it might be nice to repost this considering the date.\u003c/p\u003e\n\u003cp\u003eWhen I originally wrote this I was planning an interview with Michael W. Lucas and at some point \"leaked\" this draft article to him. After about a day I got the email equivalent of a spit take and a ton of laughter.\u003c/p\u003e\n\u003cp\u003eEnjoy!\u003c/p\u003e\n","description_plain":"I thought it might be nice to repost this considering the date.\r\n\r\nWhen I originally wrote this I was planning an interview with Michael W. Lucas and at some point \"leaked\" this draft article to him. After about a day I got the email equivalent of a spit take and a ton of laughter. \r\n\r\nEnjoy!","submitter_user":"adventureloop","user_is_author":true,"tags":["satire"],"short_id_url":"https://lobste.rs/s/kxcfcu","comments_url":"https://lobste.rs/s/kxcfcu/advanced_documentation_retrieval_on"},{"short_id":"qagkx2","created_at":"2025-10-30T10:27:14.000-05:00","title":"Corrosion - a distributed system for propagating SQLite state across a cluster of nodes","url":"https://fly.io/blog/corrosion/","score":27,"flags":0,"comment_count":0,"description":"\u003cp\u003e\u003ca href=\"https://superfly.github.io/corrosion/\" rel=\"ugc\"\u003edocs\u003c/a\u003e, \u003ca href=\"https://github.com/superfly/corrosion\" rel=\"ugc\"\u003erepo\u003c/a\u003e\u003c/p\u003e\n","description_plain":"[docs](https://superfly.github.io/corrosion/), [repo](https://github.com/superfly/corrosion)","submitter_user":"pushcx","user_is_author":false,"tags":["databases","distributed","rust"],"short_id_url":"https://lobste.rs/s/qagkx2","comments_url":"https://lobste.rs/s/qagkx2/corrosion_distributed_system_for"},{"short_id":"x45btr","created_at":"2025-10-30T02:31:21.000-05:00","title":"NPM flooded with malicious packages downloaded more than 86,000 times","url":"https://arstechnica.com/security/2025/10/npm-flooded-with-malicious-packages-downloaded-more-than-86000-times/","score":27,"flags":1,"comment_count":9,"description":"","description_plain":"","submitter_user":"laktak","user_is_author":false,"tags":["nodejs","programming","security"],"short_id_url":"https://lobste.rs/s/x45btr","comments_url":"https://lobste.rs/s/x45btr/npm_flooded_with_malicious_packages"},{"short_id":"oiisxj","created_at":"2025-10-30T04:25:39.000-05:00","title":"Nix derivation madness","url":"https://fzakaria.com/2025/10/29/nix-derivation-madness","score":36,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"Qyriad","user_is_author":false,"tags":["nix"],"short_id_url":"https://lobste.rs/s/oiisxj","comments_url":"https://lobste.rs/s/oiisxj/nix_derivation_madness"},{"short_id":"fluuv7","created_at":"2025-10-29T11:10:22.000-05:00","title":"uv is the best thing to happen to the Python ecosystem in a decade","url":"https://emily.space/posts/251023-uv","score":132,"flags":0,"comment_count":51,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["python"],"short_id_url":"https://lobste.rs/s/fluuv7","comments_url":"https://lobste.rs/s/fluuv7/uv_is_best_thing_happen_python_ecosystem"},{"short_id":"u9o6mz","created_at":"2025-10-30T09:49:47.000-05:00","title":"Reliable Django Signals","url":"https://hakibenita.com/django-reliable-signals","score":10,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"Haki","user_is_author":true,"tags":["python"],"short_id_url":"https://lobste.rs/s/u9o6mz","comments_url":"https://lobste.rs/s/u9o6mz/reliable_django_signals"},{"short_id":"rps93t","created_at":"2025-10-31T08:23:24.000-05:00","title":"NetBSD GSOC 2025 Mentor Summit in Munich, Germany: travel notes","url":"https://blog.netbsd.org/tnf/entry/gsoc2025_mentor_summit","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"jaypatelani","user_is_author":false,"tags":["netbsd"],"short_id_url":"https://lobste.rs/s/rps93t","comments_url":"https://lobste.rs/s/rps93t/netbsd_gsoc_2025_mentor_summit_munich"},{"short_id":"bc62mf","created_at":"2025-10-30T10:33:26.000-05:00","title":"Conversions in Ruby are a mess","url":"https://github.com/sampersand/blog/blob/master/conversions.md","score":15,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"pushcx","user_is_author":false,"tags":["ruby"],"short_id_url":"https://lobste.rs/s/bc62mf","comments_url":"https://lobste.rs/s/bc62mf/conversions_ruby_are_mess"},{"short_id":"hrum0f","created_at":"2025-10-29T17:41:30.000-05:00","title":"Use the XDG Base Directory Specification","url":"https://xdgbasedirectoryspecification.com/","score":51,"flags":0,"comment_count":25,"description":"","description_plain":"","submitter_user":"regalialong","user_is_author":false,"tags":["linux"],"short_id_url":"https://lobste.rs/s/hrum0f","comments_url":"https://lobste.rs/s/hrum0f/use_xdg_base_directory_specification"}]