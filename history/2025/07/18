[{"short_id":"l8a8zq","created_at":"2025-07-17T21:25:13.000-05:00","title":"NIH Is Far Cheaper Than The Wrong Dependency","url":"https://lewiscampbell.tech/blog/250718.html","score":35,"flags":0,"comment_count":19,"description":"","description_plain":"","submitter_user":"LAC-Tech","user_is_author":true,"tags":["practices","scaling"],"short_id_url":"https://lobste.rs/s/l8a8zq","comments_url":"https://lobste.rs/s/l8a8zq/nih_is_far_cheaper_than_wrong_dependency"},{"short_id":"yv7r9s","created_at":"2025-07-17T19:50:41.000-05:00","title":"Forgejo v12","url":"https://forgejo.org/2025-07-release-v12-0/","score":41,"flags":0,"comment_count":2,"description":"\u003cp\u003eSee also the \u003ca href=\"https://codeberg.org/forgejo/forgejo/milestone/12836\" rel=\"ugc\"\u003erelease notes\u003c/a\u003e (original link for this story)\u003c/p\u003e\n","description_plain":"See also the [release notes](https://codeberg.org/forgejo/forgejo/milestone/12836) (original link for this story)","submitter_user":"edwardloveall","user_is_author":false,"tags":["release","vcs"],"short_id_url":"https://lobste.rs/s/yv7r9s","comments_url":"https://lobste.rs/s/yv7r9s/forgejo_v12"},{"short_id":"s92ylk","created_at":"2025-07-17T06:54:46.000-05:00","title":"Two Simple Rules to Fix Code Reviews","url":"https://serce.me/posts/2025-07-17-two-simple-rules-to-fix-code-reviews","score":47,"flags":0,"comment_count":36,"description":"","description_plain":"","submitter_user":"serce","user_is_author":true,"tags":["practices"],"short_id_url":"https://lobste.rs/s/s92ylk","comments_url":"https://lobste.rs/s/s92ylk/two_simple_rules_fix_code_reviews"},{"short_id":"savjgl","created_at":"2025-07-17T11:08:57.000-05:00","title":"Firefox dev says Intel Raptor Lake crashes are increasing with rising temperatures in record European heat wave","url":"https://www.tomshardware.com/pc-components/cpus/firefox-dev-says-intel-raptor-lake-crashes-are-increasing-with-rising-temperatures-in-record-european-heat-wave-mozilla-staffs-tracking-overwhelmed-by-intel-crash-reports-team-disables-the-function","score":44,"flags":0,"comment_count":28,"description":"","description_plain":"","submitter_user":"freddyb","user_is_author":false,"tags":["browsers","hardware"],"short_id_url":"https://lobste.rs/s/savjgl","comments_url":"https://lobste.rs/s/savjgl/firefox_dev_says_intel_raptor_lake"},{"short_id":"rnnpqm","created_at":"2025-07-17T15:39:32.000-05:00","title":"The Big OOPs: Anatomy of a Thirty-five-year Mistake","url":"https://www.youtube.com/watch?v=wo84LFzx5nI","score":38,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"gingerBill","user_is_author":false,"tags":["historical","programming","video"],"short_id_url":"https://lobste.rs/s/rnnpqm","comments_url":"https://lobste.rs/s/rnnpqm/big_oops_anatomy_thirty_five_year_mistake"},{"short_id":"dw7vlt","created_at":"2025-07-18T06:04:13.000-05:00","title":"What are you doing this weekend?","url":"","score":5,"flags":0,"comment_count":5,"description":"\u003cp\u003eFeel free to tell what you plan on doing this weekend and even ask for help or feedback.\u003c/p\u003e\n\u003cp\u003ePlease keep in mind it’s more than OK to do nothing at all too!\u003c/p\u003e\n","description_plain":"Feel free to tell what you plan on doing this weekend and even ask for help or feedback.\r\n\r\nPlease keep in mind it’s more than OK to do nothing at all too!","submitter_user":"caius","user_is_author":true,"tags":["ask","programming"],"short_id_url":"https://lobste.rs/s/dw7vlt","comments_url":"https://lobste.rs/s/dw7vlt/what_are_you_doing_this_weekend"},{"short_id":"mklbl9","created_at":"2025-07-17T09:24:13.000-05:00","title":"lsr: ls but with io_uring","url":"https://tangled.sh/@rockorager.dev/lsr","score":47,"flags":0,"comment_count":23,"description":"","description_plain":"","submitter_user":"op","user_is_author":false,"tags":["performance","zig"],"short_id_url":"https://lobste.rs/s/mklbl9","comments_url":"https://lobste.rs/s/mklbl9/lsr_ls_with_io_uring"},{"short_id":"udtfpn","created_at":"2025-07-17T09:58:56.000-05:00","title":"Zig's new Writer","url":"https://www.openmymind.net/Zigs-New-Writer/","score":42,"flags":0,"comment_count":12,"description":"","description_plain":"","submitter_user":"carlana","user_is_author":false,"tags":["zig"],"short_id_url":"https://lobste.rs/s/udtfpn","comments_url":"https://lobste.rs/s/udtfpn/zig_s_new_writer"},{"short_id":"xzxxng","created_at":"2025-07-18T03:35:22.000-05:00","title":"When Root Meets Immutable: OpenBSD chflags vs. Log Tampering","url":"https://rsadowski.de/posts/2025/openbsd-immutable-system-logs/","score":6,"flags":0,"comment_count":5,"description":"","description_plain":"","submitter_user":"jbauer","user_is_author":false,"tags":["openbsd","security"],"short_id_url":"https://lobste.rs/s/xzxxng","comments_url":"https://lobste.rs/s/xzxxng/when_root_meets_immutable_openbsd"},{"short_id":"zcizsx","created_at":"2025-07-17T22:22:18.000-05:00","title":"How Go 1.24's Swiss Tables saved us hundreds of gigabytes","url":"https://www.datadoghq.com/blog/engineering/go-swiss-tables/","score":19,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"ucirello","user_is_author":false,"tags":["go"],"short_id_url":"https://lobste.rs/s/zcizsx","comments_url":"https://lobste.rs/s/zcizsx/how_go_1_24_s_swiss_tables_saved_us_hundreds"},{"short_id":"ytnxm6","created_at":"2025-07-18T03:22:59.000-05:00","title":"Engineering the End of Work","url":"https://schmud.de/posts/2025-07-15-engineering-end-of-work.html","score":9,"flags":1,"comment_count":1,"description":"","description_plain":"","submitter_user":"schmudde","user_is_author":true,"tags":["ai","culture"],"short_id_url":"https://lobste.rs/s/ytnxm6","comments_url":"https://lobste.rs/s/ytnxm6/engineering_end_work"},{"short_id":"dyvmbe","created_at":"2025-07-17T18:22:56.000-05:00","title":"Magic The Gathering - Deal infinite damage for 4GRU, as long as the twin primes conjecture is true","url":"https://www.reddit.com/r/BadMtgCombos/comments/1feps3y/deal_infinite_damage_for_4gru_as_long_as_the_twin/","score":21,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"linkdd","user_is_author":false,"tags":["games","math"],"short_id_url":"https://lobste.rs/s/dyvmbe","comments_url":"https://lobste.rs/s/dyvmbe/magic_gathering_deal_infinite_damage_for"},{"short_id":"jwbvyr","created_at":"2025-07-18T07:28:26.000-05:00","title":"polycode: Encode a binary file as a rational polynomial function","url":"https://codeberg.org/cve/polycode","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"cve","user_is_author":true,"tags":["math","rust"],"short_id_url":"https://lobste.rs/s/jwbvyr","comments_url":"https://lobste.rs/s/jwbvyr/polycode_encode_binary_file_as_rational"},{"short_id":"pz9rgk","created_at":"2025-07-17T21:24:18.000-05:00","title":"Supporting Faster File Load Times with Memory Optimizations in Rust","url":"https://www.figma.com/blog/supporting-faster-file-load-times-with-memory-optimizations-in-rust/","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"itamarst","user_is_author":false,"tags":["performance","rust"],"short_id_url":"https://lobste.rs/s/pz9rgk","comments_url":"https://lobste.rs/s/pz9rgk/supporting_faster_file_load_times_with"},{"short_id":"greve7","created_at":"2025-07-17T07:07:33.000-05:00","title":"Parsing Protobuf Like Never Before","url":"https://mcyoung.xyz/2025/07/16/hyperpb/","score":41,"flags":0,"comment_count":11,"description":"","description_plain":"","submitter_user":"asb","user_is_author":false,"tags":["go","performance"],"short_id_url":"https://lobste.rs/s/greve7","comments_url":"https://lobste.rs/s/greve7/parsing_protobuf_like_never_before"},{"short_id":"99mqr2","created_at":"2025-07-18T07:31:17.000-05:00","title":"Servo adds support for network inspector devtools","url":"https://servo.org/blog/2025/07/17/this-month-in-servo/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"teymour","user_is_author":false,"tags":["browsers"],"short_id_url":"https://lobste.rs/s/99mqr2","comments_url":"https://lobste.rs/s/99mqr2/servo_adds_support_for_network_inspector"},{"short_id":"czw9yx","created_at":"2025-07-17T10:42:57.000-05:00","title":"How I Became the First Linux User in India","url":"https://medium.com/@vishalmisra/how-i-became-the-first-linux-user-in-india-b86be9d2a6c5","score":31,"flags":0,"comment_count":1,"description":"","description_plain":"","submitter_user":"rrampage","user_is_author":false,"tags":["historical","linux"],"short_id_url":"https://lobste.rs/s/czw9yx","comments_url":"https://lobste.rs/s/czw9yx/how_i_became_first_linux_user_india"},{"short_id":"a29mny","created_at":"2025-07-17T11:36:39.000-05:00","title":"Hackers exploit a blind spot by hiding malware inside DNS records","url":"https://arstechnica.com/security/2025/07/hackers-exploit-a-blind-spot-by-hiding-malware-inside-dns-records/","score":14,"flags":0,"comment_count":12,"description":"","description_plain":"","submitter_user":"skeptrune","user_is_author":false,"tags":["security"],"short_id_url":"https://lobste.rs/s/a29mny","comments_url":"https://lobste.rs/s/a29mny/hackers_exploit_blind_spot_by_hiding"},{"short_id":"tusjpx","created_at":"2025-07-17T11:30:32.000-05:00","title":"The Mercury Protocol","url":"https://raw.githubusercontent.com/floren/mercury/master/SPEC","score":14,"flags":1,"comment_count":9,"description":"","description_plain":"","submitter_user":"jfloren","user_is_author":true,"tags":["networking","satire"],"short_id_url":"https://lobste.rs/s/tusjpx","comments_url":"https://lobste.rs/s/tusjpx/mercury_protocol"},{"short_id":"vpzlcr","created_at":"2025-07-17T07:45:01.000-05:00","title":"Defeating Dependency Duplication in Tests?","url":"","score":20,"flags":0,"comment_count":12,"description":"\u003cp\u003eMany larger systems are organized as layers build up of individual components with dependencies. So, your main might look like\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003elet time = new Time(parameters);\nlet tracer = new Tracer(time, more_parameters);\nlet storage = new Storage(tracer, storage_parameters);\nlet network = new Network(time, tracer, other_parameters);\nlet the_main_thing = new TheMainThing(time, tracer, storage, network); \n\nthe_main_thing.run_event_loop();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis really works beautifully in main. However, when I want to write a test for, say, a storage layer, I have to duplicate time\u0026amp;tracer initialization, and, added up across all tests across all layers, there’s a lot of duplication. Although there’s really \u003cem\u003eone\u003c/em\u003e call to \u003ccode\u003enew Time\u003c/code\u003e I care about (the one in main), just mechanically looking for references would turn up way more occurrences in tests. Some of that can be avoided by having a per-layer test harness setup, but that still doesn’t entirely eliminate duplication (now it is per layer, rather than per test).\u003c/p\u003e\n\u003cp\u003eAre there some nice patterns to solve this problem, which don’t require buying the entire dynamic reflecty dependency-injection framework?\u003c/p\u003e\n","description_plain":"Many larger systems are organized as layers build up of individual components with dependencies. So, your main might look like\r\n\r\n```\r\nlet time = new Time(parameters);\r\nlet tracer = new Tracer(time, more_parameters);\r\nlet storage = new Storage(tracer, storage_parameters);\r\nlet network = new Network(time, tracer, other_parameters);\r\nlet the_main_thing = new TheMainThing(time, tracer, storage, network); \r\n\r\nthe_main_thing.run_event_loop();\r\n```\r\n\r\nThis really works beautifully in main. However, when I want to write a test for, say, a storage layer, I have to duplicate time\u0026tracer initialization, and, added up across all tests across all layers, there's a lot of duplication. Although there's really _one_ call to `new Time` I care about (the one in main), just mechanically looking for references would turn up way more occurrences in tests. Some of that can be avoided by having a per-layer test harness setup, but that still doesn't entirely eliminate duplication (now it is per layer, rather than per test). \r\n\r\nAre there some nice patterns to solve this problem, which don't require buying the entire dynamic reflecty dependency-injection framework?","submitter_user":"matklad","user_is_author":true,"tags":["ask","practices"],"short_id_url":"https://lobste.rs/s/vpzlcr","comments_url":"https://lobste.rs/s/vpzlcr/defeating_dependency_duplication_tests"},{"short_id":"cavtz6","created_at":"2025-07-17T07:00:04.000-05:00","title":"Firefox Security \u0026 Privacy newsletter 2025 Q2","url":"https://attackanddefense.dev/2025/07/17/firefox-security-privacy-newsletter-2025-q2.html","score":12,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"freddyb","user_is_author":true,"tags":["browsers","release","security"],"short_id_url":"https://lobste.rs/s/cavtz6","comments_url":"https://lobste.rs/s/cavtz6/firefox_security_privacy_newsletter"},{"short_id":"4bhrvr","created_at":"2025-07-16T14:48:37.000-05:00","title":"Artisanal Handcrafted Git Repositories","url":"https://drew.silcock.dev/blog/artisanal-git/","score":74,"flags":0,"comment_count":10,"description":"","description_plain":"","submitter_user":"drewsberry","user_is_author":true,"tags":["vcs"],"short_id_url":"https://lobste.rs/s/4bhrvr","comments_url":"https://lobste.rs/s/4bhrvr/artisanal_handcrafted_git_repositories"},{"short_id":"7miuzf","created_at":"2025-07-17T07:55:24.000-05:00","title":"Terminal Trove - The $HOME of all things in the terminal","url":"https://terminaltrove.com/","score":26,"flags":0,"comment_count":2,"description":"","description_plain":"","submitter_user":"voytec","user_is_author":false,"tags":["debugging","freebsd","linux","unix"],"short_id_url":"https://lobste.rs/s/7miuzf","comments_url":"https://lobste.rs/s/7miuzf/terminal_trove_home_all_things_terminal"},{"short_id":"lzvc21","created_at":"2025-07-17T10:19:15.000-05:00","title":"Why pull-based pipelines are faster","url":"https://blog.sequinstream.com/why-pull-based-pipelines-are-faster/","score":7,"flags":0,"comment_count":3,"description":"","description_plain":"","submitter_user":"acco","user_is_author":true,"tags":["databases","scaling"],"short_id_url":"https://lobste.rs/s/lzvc21","comments_url":"https://lobste.rs/s/lzvc21/why_pull_based_pipelines_are_faster"},{"short_id":"ccizhx","created_at":"2025-07-18T05:10:55.000-05:00","title":"Tech Promised Everything. Did it deliver?","url":"https://www.youtube.com/watch?v=dVG8W-0p6vg","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","submitter_user":"brktdotse","user_is_author":false,"tags":["philosophy","video"],"short_id_url":"https://lobste.rs/s/ccizhx","comments_url":"https://lobste.rs/s/ccizhx/tech_promised_everything_did_it_deliver"}]